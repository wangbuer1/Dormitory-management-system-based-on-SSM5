<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="per.crystal.dormmanage.mapper.DormBuildMapper" >

    <resultMap id="dormBuildMap" type="dormBuild">
        <id property="id" column="id"/>
        <result property="buildNo" column="build_no"/>
        <result property="buildName" column="build_name"/>
        <result property="buildType" column="build_type"/>
        <result property="buildDescription" column="build_description"/>
        <result property="buildIsDelete" column="build_is_delete"/>
        <result property="createDate" column="create_date"/>
        <result property="creater" column="creater"/>
    </resultMap>

    <sql id="column">
        id,build_no,build_name,build_type,build_description,build_is_delete,create_date,creater
    </sql>
    
    <sql id="sql_where">
    	<where>
            <if test="buildNo != null and buildNo != ''">and build_no=#{buildNo}</if>
            <if test="buildType != null">and build_type=#{buildType}</if>
        </where>
    </sql>
    
    <!-- 添加 -->
    <insert id="save" parameterType="dormBuild">
    	insert into dorm_build
    	<trim prefix="(" suffix=")" suffixOverrides=",">
    		<if test="id != null and id != ''">id,</if>
    		<if test="buildNo != null and buildNo != ''">build_no,</if>
    		<if test="buildName != null and buildName != ''">build_name,</if>
    		<if test="buildType != null">build_type,</if>
    		<if test="buildDescription != null and buildDescription != ''">build_description,</if>
    		<if test="createDate != null and createDate != ''">create_date,</if>
    		<if test="creater != null and creater != ''">creater,</if>
    	</trim>
    	<trim prefix="values(" suffix=")" suffixOverrides=",">
    		<if test="id != null and id != ''">#{id},</if>
    		<if test="buildNo != null and buildNo != ''">#{buildNo},</if>
    		<if test="buildName != null and buildName != ''">#{buildName},</if>
    		<if test="buildType != null">#{buildType},</if>
    		<if test="buildDescription != null and buildDescription != ''">#{buildDescription},</if>
    		<if test="createDate != null and createDate != ''">#{createDate},</if>
    		<if test="creater != null and creater != ''">#{creater},</if>
    	</trim>
    </insert>
    
    <!-- 根据id停用 -->
    <delete id="logicDeleteById" parameterType="String">
    	update dorm_build set build_is_delete=1 where id=#{id}
    </delete>
    
    <!-- 批量停用 -->
    <delete id="logicBatchDelete" parameterType="List">
    	update dorm_build set build_is_delete=1 where id in
    	<foreach collection="list" open="(" close=")" separator="," item="id">
    		#{id}
    	</foreach>
    </delete>
    
    <!-- 根据id启用 -->
    <update id="recoverById" parameterType="String">
    	update dorm_build set build_is_delete=0 where id=#{id}
    </update>
    
    <!-- 批量启用 -->
    <update id="batchRecover" parameterType="List">
    	update dorm_build set build_is_delete=0 where id in
    	<foreach collection="list" open="(" close=")" separator="," item="id">
    		#{id}
    	</foreach>
    </update>
    
    <!-- 修改 -->
    <update id="update" parameterType="dormBuild">
    	update dorm_build
    	<set>
    		<if test="buildName != null and buildName != ''">build_name=#{buildName},</if>
    		<if test="buildType != null">build_type=#{buildType},</if>
    		<if test="buildDescription != null and buildDescription != ''">build_description=#{buildDescription},</if>
    	</set>
    	where id=#{id} and build_is_delete=0
    </update>
    
    <!-- 根据id查询 -->
    <select id="getById" parameterType="String" resultMap="dormBuildMap">
    	select <include refid="column"/> from dorm_build where id=#{id}
    </select>
    
    <!-- 查询所有 -->
    <select id="listAll" resultMap="dormBuildMap">
    	select <include refid="column"/> from dorm_build where build_is_delete=0
    </select>
    
    <!-- 查询是否存在 -->
    <select id="findExists" parameterType="String" resultType="int">
    	select count(*) from dorm_build where build_no=#{buildNo}
    </select>
    
    <!-- 分页查询 -->
    <select id="listByPage" parameterType="Map" resultMap="dormBuildMap">
    	select <include refid="column"/> from dorm_build
    	<include refid="sql_where"/> order by create_date desc
        limit #{startNum},#{pageSize}
    </select>
    
    <!-- 查询总记录数 -->
    <select id="getCount" parameterType="Map" resultType="Long">
    	select count(*) from dorm_build <include refid="sql_where"/>
    </select>
    
</mapper>