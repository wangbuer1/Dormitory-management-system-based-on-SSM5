<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="per.crystal.dormmanage.mapper.DormEmployeeMapper" >

    <resultMap id="employeeMap" type="dormEmployee">
        <id property="id" column="id"/>
        <result property="empNo" column="empno"/>
        <result property="empName" column="empname"/>
        <result property="empSex" column="empsex"/>
        <result property="birthday" column="birthday"/>
        <result property="phone" column="phone"/>
        <result property="job" column="job"/>
        <result property="createDate" column="create_date"/>
        <result property="photo" column="photo"/>
        <result property="creater" column="creater"/>
        <result property="buildId" column="build_id"/>
        <association property="dormBuild" javaType="dormBuild">
        	<result property="buildName" column="build_name"/>
        </association>
    </resultMap>

    <sql id="column">
        e.id,e.empno,e.empname,e.empsex,e.birthday,e.phone,e.photo,e.create_date,e.creater,e.job,
        e.build_id,b.build_name
    </sql>
    
    <sql id="sql_where">
    	<where>
            <if test="empName != null and empName != ''">and empname like concat('%','${empName}','%')</if>
        	 <if test="buildName != null and buildName != ''">and b.build_name like concat('%','${buildName}','%')</if>
        </where>
    </sql>
    
    <!-- 添加 -->
    <insert id="save" parameterType="dormEmployee">
    	insert into dorm_employee
    	<trim prefix="(" suffix=")" suffixOverrides=",">
    		<if test="id != null and id != ''">id,</if>
    		<if test="empNo != null and empNo != ''">empno,</if>
    		<if test="empName != null and empName != ''">empname,</if>
    		<if test="empSex != null">empsex,</if>
    		<if test="birthday != null and birthday != ''">birthday,</if>
    		<if test="phone != null and phone != ''">phone,</if>
    		<if test="createDate != null and createDate != ''">create_date,</if>
    		<if test="creater != null and creater != ''">creater,</if>
    		<if test="photo != null and photo != ''">photo,</if>
    		<if test="buildId != null and buildId != ''">build_id,</if>
    		<if test="job != null and job != ''">job</if>
    	</trim>
    	<trim prefix="values(" suffix=")" suffixOverrides=",">
    		<if test="id != null and id != ''">#{id},</if>
    		<if test="empNo != null and empNo != ''">#{empNo},</if>
    		<if test="empName != null and empName != ''">#{empName},</if>
    		<if test="empSex != null">#{empSex},</if>
    		<if test="birthday != null and birthday != ''">#{birthday},</if>
    		<if test="phone != null and phone != ''">#{phone},</if>
    		<if test="createDate != null and createDate != ''">#{createDate},</if>
    		<if test="creater != null and creater != ''">#{creater},</if>
    		<if test="photo != null and photo != ''">#{photo},</if>
    		<if test="buildId != null and buildId != ''">#{buildId},</if>
    		<if test="job != null and job != ''">#{job}</if>
    	</trim>
    </insert>
    
    <!-- 根据id删除 -->
    <delete id="deleteById" parameterType="String">
    	delete from dorm_employee where id=#{id}
    </delete>
    
    <!-- 批量删除 -->
    <delete id="batchDelete" parameterType="List">
    	delete from dorm_employee where id in
    	<foreach collection="list" open="(" close=")" separator="," item="id">
    		#{id}
    	</foreach>
    </delete>
    
    <!-- 修改 -->
    <update id="update" parameterType="dormEmployee">
    	update dorm_employee
    	<set>
    		<if test="empName != null and empName != ''">empname=#{empName},</if>
    		<if test="empSex != null">empsex=#{empSex},</if>
    		<if test="birthday != null and birthday != ''">birthday=#{birthday},</if>
    		<if test="phone != null and phone != ''">phone=#{phone},</if>
    		<if test="photo != null and photo != ''">photo=#{photo},</if>
    		<if test="buildId != null and buildId != ''">build_id=#{buildId},</if>
    		<if test="job != null and job != ''">job=#{job}</if>
    	</set>
    	where id=#{id}
    </update>
    
    <!-- 根据id查询 -->
    <select id="getById" parameterType="String" resultMap="employeeMap">
    	select <include refid="column"/> from dorm_employee where id=#{id}
    </select>
    
    <!-- 查询是否存在 -->
    <select id="findExists" parameterType="String" resultType="int">
    	select count(*) from dorm_employee where empno=#{empNo}
    </select>
    
    <!-- 分页查询 -->
    <select id="listByPage" parameterType="Map" resultMap="employeeMap">
    	select <include refid="column"/> from dorm_employee e
    	inner join dorm_build b on e.build_id=b.id
    	<include refid="sql_where"/> order by create_date desc
        limit #{startNum},#{pageSize}
    </select>
    
    <!-- 查询总记录数 -->
    <select id="getCount" parameterType="Map" resultType="Long">
    	select count(*) from dorm_employee e
    	inner join dorm_build b on e.build_id=b.id <include refid="sql_where"/>
    </select>
    
</mapper>